package cn.com.enersun.oa.oba.util;import org.apache.poi.hssf.usermodel.HSSFWorkbook;import org.apache.poi.ss.usermodel.*;import org.apache.poi.ss.util.CellRangeAddress;import java.io.OutputStream;import java.util.*;/** * @author: jt * @date: 2018-9-19 */public class YearExcelExportUtil {    private static final String[] month = {            "一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"};    private List<List<Map<String, String>>> lists;    public YearExcelExportUtil(List<List<Map<String, String>>> lists) {        this.lists = lists;    }    private HSSFWorkbook wb;    public HSSFWorkbook createWorkBook(){        Calendar calendar = Calendar.getInstance();        wb = new HSSFWorkbook();        Map<String, CellStyle> styles = createStyles(wb);        //设置sheet名        Sheet sheet = wb.createSheet("公务活动统筹(年维度)");        //turn off gridlines        sheet.setDisplayGridlines(false);        sheet.setPrintGridlines(false);        sheet.setFitToPage(true);        sheet.setHorizontallyCenter(true);        PrintSetup printSetup = sheet.getPrintSetup();        printSetup.setLandscape(true);        //the following three statements are required only for HSSF        sheet.setAutobreaks(true);        printSetup.setFitHeight((short) 1);        printSetup.setFitWidth((short) 1);        //the header row: centered text in 48pt font        Row headerRow = sheet.createRow(0);        headerRow.setHeightInPoints(30);        Cell titleCell = headerRow.createCell(0);        //设置标题        Calendar date = Calendar.getInstance();        String year = String.valueOf(date.get(Calendar.YEAR));        titleCell.setCellValue(year+"年");        titleCell.setCellStyle(styles.get("title"));        sheet.addMergedRegion(new CellRangeAddress(0, 0, 0, 1));        Row secondRow = sheet.createRow(1);        List<String> headerRowList = Arrays.asList("月份","活动计划详细信息");        for (int i = 0; i < 2; i++) {            sheet.setColumnWidth(i, 13 * 256);            Cell cell = secondRow.createCell(i);            cell.setCellValue(headerRowList.get(i));            cell.setCellStyle(styles.get("headRow"));        }        int cnt = 1, day = 1;        int rownum = 2;        for (int j = 0; j < 12; j++) {            Row row = sheet.createRow(rownum++);            for (int i = 0; i < 2; i++) {                Cell cell = row.createCell(i);                if (i == 0) {                        cell.setCellValue(month[j]);                        cell.setCellStyle(styles.get("datecols"));                        continue;                }                String value="";                List<Map<String, String>> list = lists.get(j);                for (Map<String, String> stringStringMap : list) {                        value+=stringStringMap.get("leaders")+"：";                        value+=stringStringMap.get("title")+"\r\n";                    }                cell.setCellValue(value);                int length = cell.toString().split("\r\n").length;                if(length<4){                    length=4;                }                row.setHeight((short)((length+2)*256));                sheet.setColumnWidth(i,30*2*256);                cell.setCellStyle(styles.get("content"));            }        }        return wb;    }        /**         * cell样式         */        private static Map<String, CellStyle> createStyles (Workbook wb){            Map<String, CellStyle> styles = new HashMap<String, CellStyle>();            short borderColor = IndexedColors.GREY_50_PERCENT.getIndex();            CellStyle style;            Font titleFont = wb.createFont();            titleFont.setFontHeightInPoints((short) 20);            titleFont.setColor(IndexedColors.DARK_BLUE.getIndex());            style = wb.createCellStyle();            style.setAlignment(HorizontalAlignment.CENTER);            style.setVerticalAlignment(VerticalAlignment.CENTER);            style.setFont(titleFont);            style.setBorderRight(BorderStyle.THIN);            style.setRightBorderColor(borderColor);            styles.put("title", style);            Font monthFont = wb.createFont();            monthFont.setFontHeightInPoints((short) 12);            monthFont.setColor(IndexedColors.WHITE.getIndex());            monthFont.setBold(true);            style = wb.createCellStyle();            style.setAlignment(HorizontalAlignment.CENTER);            style.setVerticalAlignment(VerticalAlignment.CENTER);            style.setFillForegroundColor(IndexedColors.DARK_BLUE.getIndex());            style.setFillPattern(FillPatternType.SOLID_FOREGROUND);            style.setFont(monthFont);            styles.put("headRow", style);            Font dayFont = wb.createFont();            style = wb.createCellStyle();            style.setWrapText(true);            style.setAlignment(HorizontalAlignment.LEFT);            style.setVerticalAlignment(VerticalAlignment.CENTER);            style.setBorderLeft(BorderStyle.THIN);            style.setFillForegroundColor(IndexedColors.WHITE.getIndex());            style.setFillPattern(FillPatternType.SOLID_FOREGROUND);            style.setLeftBorderColor(borderColor);            style.setBorderBottom(BorderStyle.THIN);            style.setBottomBorderColor(borderColor);            style.setFont(dayFont);            style.setBorderTop(BorderStyle.THIN);            style.setTopBorderColor(borderColor);            style.setBorderLeft(BorderStyle.THIN);            style.setRightBorderColor(borderColor);            style.setBorderRight(BorderStyle.THIN);            styles.put("content", style);            style = wb.createCellStyle();            style.setWrapText(true);            style.setAlignment(HorizontalAlignment.CENTER);            style.setVerticalAlignment(VerticalAlignment.CENTER);            style.setBorderLeft(BorderStyle.THIN);            style.setFillForegroundColor(IndexedColors.WHITE.getIndex());            style.setFillPattern(FillPatternType.SOLID_FOREGROUND);            style.setLeftBorderColor(borderColor);            style.setBorderBottom(BorderStyle.THIN);            style.setBottomBorderColor(borderColor);            style.setFont(dayFont);            style.setBorderTop(BorderStyle.THIN);            style.setTopBorderColor(borderColor);            style.setBorderLeft(BorderStyle.THIN);            style.setRightBorderColor(borderColor);            style.setBorderRight(BorderStyle.THIN);            styles.put("datecols", style);            return styles;        }    public void exportExcel(OutputStream os) throws Exception {        wb = createWorkBook();        wb.write(os);        os.close();    }}
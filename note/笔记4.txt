package cn.com.enersun.oa.oba.util;import org.apache.poi.hssf.usermodel.HSSFWorkbook;import org.apache.poi.ss.usermodel.*;import org.apache.poi.ss.util.CellRangeAddress;import java.io.OutputStream;import java.text.ParseException;import java.time.LocalDate;import java.time.Period;import java.time.format.DateTimeFormatter;import java.util.ArrayList;import java.util.HashMap;import java.util.List;import java.util.Map;/** * @author: jt * @date: 2018-9-17 */public class WeekExcelExportUtil {    private static final String[] days = {            "周一", "周二",            "周三", "周四", "周五", "周六","周日"};    private static final String[]  time = {            "上午", "下午"};    private String startDate;    private String endDate;    private List<String> leaders;    private Map<String,List<String>> map;    private HSSFWorkbook wb;    public  WeekExcelExportUtil(String startDate, String endDate, List<String> leaders, Map<String, List<String>> map) {        this.startDate = startDate;        this.endDate = endDate;        this.leaders = leaders;        this.map = map;    }    public HSSFWorkbook createWorkbook() throws ParseException {        wb = new HSSFWorkbook();        Map<String, CellStyle> styles = createStyles(wb);        //设置sheet名        Sheet sheet = wb.createSheet("活动");        //turn off gridlines        sheet.setDisplayGridlines(false);        sheet.setPrintGridlines(false);        sheet.setFitToPage(true);        sheet.setHorizontallyCenter(true);        PrintSetup printSetup = sheet.getPrintSetup();        printSetup.setLandscape(true);        //the following three statements are required only for HSSF        sheet.setAutobreaks(true);        printSetup.setFitHeight((short) 1);        printSetup.setFitWidth((short) 1);        //the header row: centered text in 48pt font        Row headerRow = sheet.createRow(0);        headerRow.setHeightInPoints(30);        Cell titleCell = headerRow.createCell(0);        //设置标题        String title = startDate+"~"+endDate;        titleCell.setCellValue(title);        titleCell.setCellStyle(styles.get("title"));        sheet.addMergedRegion(new CellRangeAddress(0,0,0,leaders.size()+1));        Row secondRow = sheet.createRow(1);        List<String> headerRowList=new ArrayList<String>();        headerRowList.add("日期/周");        headerRowList.add("时间");        headerRowList.addAll(leaders);        for (int i = 0; i < headerRowList.size(); i++) {            sheet.setColumnWidth(i, 10 * 256);            Cell cell = secondRow.createCell(i);            cell.setCellValue(headerRowList.get(i));            cell.setCellStyle(styles.get("headRow"));        }        int cnt = 1, day = 1;        int rownum = 2;        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy-MM-dd");        LocalDate date = LocalDate.parse(startDate,dtf);        DateTimeFormatter dtf1= DateTimeFormatter.ofPattern("MM-dd");        Period period = Period.ofDays(1);        for (int j = 0; j < 14; j++) {            Row row = sheet.createRow(rownum++);            row.setHeightInPoints(80);            for (int i = 0; i < leaders.size()+2; i++) {                if(i==0){                    if(rownum%2==1){                        Cell cell = row.createCell(i);                        cell.setCellValue(date.format(dtf1)+"\r\n"+days[j/2]);                        date=date.plus(period);                        sheet.addMergedRegion(new CellRangeAddress(rownum-1,rownum,0,0));                        cell.setCellStyle(styles.get("datecols"));                        continue;                    }else{                        continue;                    }                }                if(i==1){                    Cell cell = row.createCell(i);                    cell.setCellValue(time[j%2]);                    cell.setCellStyle(styles.get("datecols"));                    continue;                }                Cell cell = row.createCell(i);                cell.setCellStyle(styles.get("content"));                String key =days[j / 2] + time[j % 2] + leaders.get(i - 2);                sheet.setColumnWidth(i,20*256);                if(key!=null){                    List<String> list = map.get(key);                    if(list!=null){                        String value="";                        for (String s : list) {                            value+= s+"\r\n";                        }                        cell.setCellValue(value);                        if(list.size()<4){                            row.setHeightInPoints(80);                        }else {                            row.setHeight((short) (list.size() * 256));                        }                    }                }            }            if(j==13){                Row row1 = sheet.createRow(rownum);                Cell cell = row1.createCell(0);                CellStyle cellStyle = wb.createCellStyle();                cellStyle.setTopBorderColor(IndexedColors.GREY_50_PERCENT.getIndex());                cellStyle.setBorderTop(BorderStyle.THIN);                cell.setCellStyle(cellStyle);            }        }        return wb;    }    /**     * cell样式     */    private static Map<String, CellStyle> createStyles(Workbook wb){        Map<String, CellStyle> styles = new HashMap<String, CellStyle>();        short borderColor = IndexedColors.GREY_50_PERCENT.getIndex();        CellStyle style;        Font titleFont = wb.createFont();        titleFont.setFontHeightInPoints((short)20);        titleFont.setColor(IndexedColors.DARK_BLUE.getIndex());        style = wb.createCellStyle();        style.setAlignment(HorizontalAlignment.CENTER);        style.setVerticalAlignment(VerticalAlignment.CENTER);        style.setFont(titleFont);        style.setBorderRight(BorderStyle.THIN);        style.setRightBorderColor(borderColor);        styles.put("title", style);        Font monthFont = wb.createFont();        monthFont.setFontHeightInPoints((short)12);        monthFont.setColor(IndexedColors.WHITE.getIndex());        monthFont.setBold(true);        style = wb.createCellStyle();        style.setAlignment(HorizontalAlignment.CENTER);        style.setVerticalAlignment(VerticalAlignment.CENTER);        style.setFillForegroundColor(IndexedColors.DARK_BLUE.getIndex());        style.setFillPattern(FillPatternType.SOLID_FOREGROUND);        style.setFont(monthFont);        styles.put("headRow", style);        Font dayFont = wb.createFont();        style = wb.createCellStyle();        style.setWrapText(true);        style.setAlignment(HorizontalAlignment.LEFT);        style.setVerticalAlignment(VerticalAlignment.CENTER);        style.setBorderLeft(BorderStyle.THIN);        style.setFillForegroundColor(IndexedColors.WHITE.getIndex());        style.setFillPattern(FillPatternType.SOLID_FOREGROUND);        style.setLeftBorderColor(borderColor);        style.setBorderBottom(BorderStyle.THIN);        style.setBottomBorderColor(borderColor);        style.setFont(dayFont);        style.setBorderTop(BorderStyle.THIN);        style.setTopBorderColor(borderColor);        style.setBorderLeft(BorderStyle.THIN);        style.setRightBorderColor(borderColor);        style.setBorderRight(BorderStyle.THIN);        styles.put("content", style);        style = wb.createCellStyle();        style.setWrapText(true);        style.setAlignment(HorizontalAlignment.CENTER);        style.setVerticalAlignment(VerticalAlignment.CENTER);        style.setBorderLeft(BorderStyle.THIN);        style.setFillForegroundColor(IndexedColors.WHITE.getIndex());        style.setFillPattern(FillPatternType.SOLID_FOREGROUND);        style.setLeftBorderColor(borderColor);        style.setBorderBottom(BorderStyle.THIN);        style.setBottomBorderColor(borderColor);        style.setFont(dayFont);        style.setBorderTop(BorderStyle.THIN);        style.setTopBorderColor(borderColor);        style.setBorderLeft(BorderStyle.THIN);        style.setRightBorderColor(borderColor);        style.setBorderRight(BorderStyle.THIN);        styles.put("datecols", style);        return styles;    }    public void exportExcel(OutputStream os)throws Exception {                wb = createWorkbook();                wb.write(os);                os.close();    }}